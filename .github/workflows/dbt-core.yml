name: DBT Workflow

on:
  workflow_dispatch:  # Enables manual triggering
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
    
jobs:
  dbt:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies from requirements.txt
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Install dependencies from the requirements.txt file

    - name: Install DBT
      run: |
        pip install dbt-core dbt-snowflake  # Replace 'dbt-snowflake' with your DBT adapter if needed

    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}  # Optional if your scripts specify the region

    - name: Export Environment Variables
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      run: |
        echo "Exporting secrets for DBT..."
        echo "SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}" >> $GITHUB_ENV
        echo "SNOWFLAKE_USER=${SNOWFLAKE_USER}" >> $GITHUB_ENV
        echo "SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}" >> $GITHUB_ENV
        echo "SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE}" >> $GITHUB_ENV
        echo "SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE}" >> $GITHUB_ENV
        echo "SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA}" >> $GITHUB_ENV

    # Use AWS CLI for Landing Zone Flusher Script
    - name: Run Landing Zone Flusher Script
      run: |
        python -m weather.landing_zone_flusher
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    - name: Run S3 to Snowflake Flusher Script
      run: |
        python -m weather.s3_to_sf_flusher
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    - name: Validate DBT Setup
      run: dbt debug

    - name: Install DBT Dependencies
      run: dbt deps

    - name: Run DBT Models
      run: dbt run

    - name: Run DBT Tests
      run: dbt test
